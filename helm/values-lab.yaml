global:
  hosts:
    domain: public-digital.lab.myddns.me
    https: false
  ingress:
    configureCertmanager: false
    class: nginx
    tls:
      enabled: false

  psql:
    password:
      useSecret: true
      secret: gitlab-postgresql
      key: postgresql-postgres-password
      file:
    host: gitlab-postgresql.gitlab
    port: 5432
    username: postgres
    database: gitlabhq_production
    applicationName:
    preparedStatements: false

  redis:
    password:
      enabled: true
      secret: gitlab-redis
      key: redis-password
    host: gitlab-redis-master.gitlab
    port: 6379

  ## https://docs.gitlab.com/charts/charts/globals#configure-minio-settings
  minio:
    enabled: true
    credentials: {}
      # secret:

  appConfig:
    omniauth:
      enabled: true
      autoSignInWithProvider:
      syncProfileFromProvider: []
      syncProfileAttributes: ['email']
      allowSingleSignOn: true
      blockAutoCreatedUsers: false
      autoLinkLdapUser: true
      autoLinkSamlUser: true
      autoLinkUser: []
      externalProviders: []
      allowBypassTwoFactor: []
      providers: #[]
      - name: 'openid_connect'
        secret: gitlab-openid-oauth2
        key: provider
## End of global

upgradeCheck:
  enabled: false

## Settings to for the Let's Encrypt ACME Issuer
certmanager-issuer:
  email: email@public-digital.lab.myddns.me

## Installation & configuration of jetstack/cert-manager
## See requirements.yaml for current version
certmanager:
  install: false

## https://docs.gitlab.com/charts/charts/nginx/
## https://docs.gitlab.com/charts/architecture/decisions#nginx-ingress
## Installation & configuration of charts/ingress-nginx:
nginx-ingress:
  enabled: false

## Configuration of Redis
## https://docs.gitlab.com/charts/architecture/decisions#redis
## https://docs.gitlab.com/charts/installation/deployment.html#redis
redis:
  install: true
  existingSecret: gitlab-redis
  existingSecretKey: redis-password
  usePasswordFile: true
  cluster:
    enabled: true
  metrics:
    enabled: true

## Installation & configuration of stable/prostgresql
## See requirements.yaml for current version
postgresql:
  postgresqlUsername: gitlab
  # This just needs to be set. It will use a second entry in existingSecret for postgresql-postgres-password
  postgresqlPostgresPassword: ch4ng3m3
  postgresqlPassword: ch4ng3m3
  install: true
  postgresqlDatabase: gitlabhq_production
  image:
    tag: 12.7.0
  usePasswordFile: true
  # existingSecret: 'bogus'
  initdbScriptsConfigMap: 'bogus'
  master:
    extraVolumeMounts:
      - name: custom-init-scripts
        mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
        subPath: init_revision.sh
    podAnnotations:
      postgresql.gitlab/init-revision: "1"
  metrics:
    enabled: true
    ## Optionally define additional custom metrics
    ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file

registry:
  enabled: false


## Installation & configuration of gitlab/gitlab-runner
## See requirements.yaml for current version
gitlab-runner:
  install: false


## Settings for individual sub-charts under GitLab
## Note: Many of these settings are configurable via globals
gitlab:
  ## https://docs.gitlab.com/charts/charts/gitlab/toolbox
  toolbox:
    replicas: 1
    antiAffinityLabels:
      matchLabels:
        app: 'gitaly'

  webservice:
    revisionHistoryLimit: 0
    minReplicas: 1
    maxReplicas: 2

  sidekiq:
    revisionHistoryLimit: 0
    minReplicas: 1
    maxReplicas: 2

  gitlab-shell:
    revisionHistoryLimit: 0
    minReplicas: 1
    maxReplicas: 2
